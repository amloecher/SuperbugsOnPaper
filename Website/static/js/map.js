var map, clusterLayer;

function GetMap() {
  map = new Microsoft.Maps.Map('#myMap', {zoom: 2});

  var pins = []
  //hard-coded coordinates for demo purposes
  var latlon = ["12.978955,77.574838", "12.981472,77.619214", "12.980332,77.617265", "13.011561,77.606354", "12.975496,77.556826", "12.97518,77.570991", "12.971599,77.594563", "12.985405,77.525386",
                "13.753129,100.368481", "13.762841,100.774975","13.652480,100.496197", "13.970248,100.551128", "13.740013,100.521774", "13.741535,100.534821", "13.766785,100.514908","13.936637,100.558338", "13.936158,100.638676", "13.824357,100.570698", "13.756526,100.445042", "13.732035,100.404530","13.790913,100.582371", "13.782619,100.582371", "13.805104,100.604343", "13.784140,100.616703", "13.797665,100.648975", "13.831858,100.635929", "13.834713,100.609837", "13.783130,100.524006", "13.786558,100.513363", "13.795320,100.504436", "13.806417,100.533619", "13.821513,100.535679", "13.838609,100.535679", "13.845703,100.510960", "13.835796,100.502377", "13.827889,100.484180", "13.799644,100.491734", "13.790736,100.546665", "13.839838,100.551472", "13.872932,100.549068", "13.950340,100.622711", "13.959097,100.642967", "13.943624,100.646744", "13.958191,100.652924", "13.939053,100.630264", "13.952141,100.603485", "13.958566,100.583572", "13.962657,100.557823", "13.951756,100.545807", "13.937855,100.531731", "13.944946,100.587692", "13.972028,100.612068","13.975453,100.627861", "13.995203,100.595245", "13.984303,100.580482", "13.984063,100.564003", "13.987488,100.543747", "13.911553,100.567093", "13.914313,100.582542", "13.917073,100.631981", "13.890172,100.614128", "13.918260,100.593872", "13.921019,100.560226", "13.918780,100.542030", "13.914542,100.526924", "13.901639,100.523491","13.890068,100.530701", "13.900493,100.549927", "13.881876,100.517483", "13.883090,100.528297", "13.884803,100.543747", "13.874184,100.515766", "13.875231,100.528469", "13.869612,100.538425", "13.866825,100.517139", "13.862039,100.529156", "13.853253,100.525208", "13.850800,100.541515", "13.862346,100.554562", "13.885891,100.556450", "13.889938,100.570526", "13.902982,100.584946", "13.892531,100.579796", "13.876580,100.570183", "13.862294,100.580826", "13.846841,100.579796", "13.855888,100.596962", "13.870268,100.600739", "13.883980,100.595589", "13.901691,100.613785", "13.896572,100.621166", "13.888120,100.630436", "13.880668,100.618248", "13.977921,100.561171", "13.973803,100.558081", "13.974683,100.562201", "13.979394,100.567350", "13.980440,100.572672", "13.974657,100.568209", "13.970539,100.567865", "13.965588,100.570097", "13.977129,100.576448", "13.987337,100.587950", "13.979389,100.585375", "13.972439,100.582285", "13.965323,100.588121", "13.974365,100.592756", "13.982908,100.598936", "13.985120,100.607519", "13.975838,100.604258", "13.966557,100.600996", "13.959607,100.595331", "13.960986,100.610609", "13.969029,100.621595", "13.961746,100.624342", "13.966958,100.633440", "13.953677,100.636187", "17.992626,102.619348", "17.989452,102.631364", "17.983340,102.617631", "17.982452,102.632051", "17.984829,102.597718", "17.974798,102.604585", "17.968358,102.616944", "17.976288,102.636170", "17.962337,102.633424", "16.434735,102.831178", "16.440767,102.835555", "16.443507,102.839332", "16.432828,102.839675", "16.431699,102.832980", "11.563650,104.900126", "11.566772,104.911113", "11.552740,104.900126", "11.553171,104.911799", "11.565374,104.925876", "15.233128,104.864936", "15.235162,104.853091", "15.241668,104.843307", "15.231777,104.845023", "15.230002,104.853263", "15.229552,104.862361", "12.674870,108.054688", "12.671400,108.067391", "12.668767,108.048165", "12.665465,108.057950", "12.667019,108.075116", "20.022997,110.343707", "20.033732,110.366709", "20.008985,110.348857", "7.881955,98.393114", "7.879416,98.393286", "7.879301,98.391311", "7.879738,98.395345", "7.877709,98.388608", "7.877976,98.391698", "7.877988,98.394616", "7.878850,98.397320", "7.876312,98.391698", "7.876154,98.395174", "7.875018,98.392127", "5.383253,100.470871", "5.381483,100.473789", "5.381763,100.468124", "5.379651,100.467009", "5.386425,100.468811", "5.379442,100.470957", "3.138401,101.711468", "3.138199,101.713227", "3.137568,101.711639", "3.135995,101.710738", "3.136778,101.713056", "3.135119,101.711725", "3.135945,101.714129", "-2.972394,104.755582", "-2.972510,104.760217", "-2.975113,104.759573", "-2.975658,104.755410", "7.082475,125.606603", "7.082499,125.610379", "7.080904,125.599822", "7.077181,125.603255", "7.077971,125.610036", "7.073992,125.605916", "15.172493,120.595196", "15.167072,120.592449", "15.481678,120.971477", "-2.214822,113.909500", "-2.222664,113.901947", "-2.221587,113.912761", "-2.212557,113.902376", "-2.204986,113.899372", "-2.204361,113.912246", "-2.213771,113.919113", "-2.218121,113.920744", "-2.226331,113.916109", "-2.226564,113.906496", "-2.225253,113.897140", "-2.229603,113.902977", "-5.138971,119.431067", "-5.143066,119.434020", "-5.137747,119.436636", "-5.128310,119.430645", "-5.127782,119.437058", "28.642521,77.211694","28.652521,77.211694", "52.495501,13.337665","52.595501,13.337665", "52.605501,13.337665", "40.451862,-3.685865", "38.733774,-9.136822", "40.636539,-73.939752", "40.657265,-74.217897", "27.950149,-82.497212","27.970149,-82.497212",  "37.292744,-121.897076", "37.392744,-121.897076", "-1.959669,30.064341", "-1.962866,30.073367", "-1.963356,30.051344","-5.708332,-39.151240", "-5.729474,-39.196644", "-5.688319,-39.188698", "22.232098,-102.326105", "22.332098,-102.326105", "22.432098,-102.326105"];
  for (var i = 0; i < latlon.length; i++) {
      var vals = latlon[i].split(',');

      if(vals.length >= 2){
          var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat(vals[0]), parseFloat(vals[1])));
          pins.push(pushpin)

      }

  }
  //Load the Clustering module.
  Microsoft.Maps.loadModule("Microsoft.Maps.Clustering", function () {
                            clusterLayer = new Microsoft.Maps.ClusterLayer(pins, {
                                                                           clusteredPinCallback: createCustomClusteredPin,
                                                                           gridSize: 80
                                                                           });
                            map.layers.insert(clusterLayer);
                            });
}

function createCustomClusteredPin(cluster) {
  //Define variables for minimum cluster radius, and how wide the outline area of the circle should be.
  var minRadius = 12;
  var outlineWidth = 7;

  //Get the number of pushpins in the cluster
  var clusterSize = cluster.containedPushpins.length;

  //Calculate the radius of the cluster based on the number of pushpins in the cluster, using a logarithmic scale.
  var radius = Math.log(clusterSize) / Math.log(10) * 5 + minRadius;

  //Default cluster color is red.
  var fillColor = 'rgba(255, 40, 40, 0.5)';

  if (clusterSize < 10) {
      //Make the cluster green if there are less than 10 pushpins in it.
      fillColor = 'rgba(20, 180, 20, 0.5)';
  } else if (clusterSize < 40) {
      //Make the cluster yellow if there are 10 to 99 pushpins in it.
      fillColor = 'rgba(255, 210, 40, 0.5)';
  }

  //Create an SVG string of two circles, one on top of the other, with the specified radius and color.
  var svg = ['<svg xmlns="http://www.w3.org/2000/svg" width="', (radius * 2), '" height="', (radius * 2), '">',
             '<circle cx="', radius, '" cy="', radius, '" r="', radius, '" fill="', fillColor, '"/>',
             '<circle cx="', radius, '" cy="', radius, '" r="', radius - outlineWidth, '" fill="', fillColor, '"/>',
             '</svg>'];

             //Customize the clustered pushpin using the generated SVG and anchor on its center.
             cluster.setOptions({
                                icon: svg.join(''),
                                anchor: new Microsoft.Maps.Point(radius, radius),
                                textOffset: new Microsoft.Maps.Point(0, radius - 8) //Subtract 8 to compensate for height of text.
                                });
}